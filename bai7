#include <iostream>

// Hàm để hoán đổi giá trị của hai phần tử
void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Hàm để sắp xếp một cây con tại vị trí i
void heapify(int arr[], int n, int i) {
    int largest = i;  // Khởi tạo largest là nút gốc
    int left = 2 * i + 1;  // Chỉ số của nút con trái
    int right = 2 * i + 2;  // Chỉ số của nút con phải

    // Nếu nút con trái lớn hơn nút gốc
    if (left < n && arr[left] > arr[largest])
        largest = left;

    // Nếu nút con phải lớn hơn nút gốc
    if (right < n && arr[right] > arr[largest])
        largest = right;

    // Nếu largest không phải là nút gốc
    if (largest != i) {
        swap(&arr[i], &arr[largest]);

        // Sắp xếp lại cây con bị ảnh hưởng
        heapify(arr, n, largest);
    }
}

// Hàm sắp xếp Heapsort
void heapSort(int arr[], int n) {
    // Xây dựng cây Heap (sắp xếp lại mảng)
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i);

    // Trích xuất lần lượt các phần tử từ Heap
    for (int i = n - 1; i > 0; i--) {
        swap(&arr[0], &arr[i]);  // Di chuyển phần tử lớn nhất (gốc) đến cuối mảng

        // Sắp xếp lại cây Heap với mảng đã bị giảm kích thước
        heapify(arr, i, 0);
    }
}

int main() {
    int arr[] = {41, 23, 4, 14, 56, 1};
    int n = sizeof(arr) / sizeof(arr[0]);

    heapSort(arr, n);

    std::cout << "Mãng đã sắp xếp: ";
    for (int i = 0; i < n; i++) {
        std::cout << arr[i] << " ";
    }

    return 0;
}
